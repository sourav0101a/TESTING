 //Generic Before Delete Method
    public static void genericBeforeDelete(Map<Id,SObject> oldItems){
        
        // Used to check if user is TFinegration and System Admin profile prevent them from deleting the opportunity
        for(Opportunity oppDelete:(List<Opportunity>)oldItems.values()){

            //Check if the Opportunity is created by TF Integration User(deleteOpp)
            if(oppDelete.CreatedById ==Label.UnicaDeleteId && oppDelete.Unica_ID__c!= '' && oppDelete.Unica_ID__c!= null){
                String UserNames = Label.Delete_Record_Restriction; // Tf Integration User
                String ProfileIds = Label.Delete_Record_Restriction_Profile; //System Admin Profile

                // Check if the user trying to delete opportunity is not TFintegration user or User with system Admin profile
                if (!UserNames.contains(UserInfo.getName()+';') && !ProfileIds.contains(UserInfo.getProfileId()+';')){

                    oppDelete.addError(Label.Opportunity_deelete_error_message);
                }
            }
        }
        
    }//End Of Generic Before delete

        // For example, verify the inserted CampaignInfluence records
        List<CampaignInfluence> insertedRecords = [SELECT Id, OpportunityId, CampaignId, ModelId FROM CampaignInfluence];
        System.assertEquals(3, insertedRecords.size(), 'Incorrect number of CampaignInfluence records inserted');
        // Add more assertions to validate the data as needed
        
        // Verify CampaignInfluence records associated with genesis opportunities
        for (Id opptyId : genesisOppMap.keySet()) {
            List<CampaignInfluence> associatedRecords = [SELECT Id FROM CampaignInfluence WHERE OpportunityId = :opptyId];
            System.assertNotEquals(0, associatedRecords.size(), 'No CampaignInfluence records associated with Genesis Opportunity');
        }
