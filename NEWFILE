@isTest
private class OpportunityTriggerGenericHelperTest {
    
    @isTest
    static void testOpportunityInsertAndUpdate() {
        // Create a FINRA Registered User
        User finraUser = TestDataFactory.createFinraRegisteredUser();
        
        // Create an opportunity and add the FINRA Registered User to the sales team
        Opportunity testOpportunity = TestDataFactory.createTestOpportunity();
        OpportunityTeamMember teamMember = new OpportunityTeamMember(
            OpportunityId = testOpportunity.Id,
            UserId = finraUser.Id,
            TeamMemberRole = 'Sales Representative'
        );
        insert teamMember;
        
        // Now update the opportunity to test your trigger logic
        testOpportunity.StageName = 'Closed Won'; // Ensure this triggers the validation rule
        update testOpportunity;
        
        // Add assertions as needed to verify expected behavior
        // For example, verify that the update failed due to the validation rule
        System.assertEquals('Prospecting', [SELECT StageName FROM Opportunity WHERE Id = :testOpportunity.Id].StageName);
    }
}



public class TestDataFactory {
    
    public static User createFinraRegisteredUser() {
        Profile finraProfile = [SELECT Id FROM Profile WHERE Name = 'FINRA Registered User' LIMIT 1];
        User finraUser = new User(
            ProfileId = finraProfile.Id,
            FirstName = 'Finra',
            LastName = 'User',
            Email = 'finra.user@example.com',
            Username = 'finra.user@example.com' + System.currentTimeMillis(),
            Alias = 'finrau',
            TimeZoneSidKey = 'America/Los_Angeles',
            LocaleSidKey = 'en_US',
            EmailEncodingKey = 'UTF-8',
            LanguageLocaleKey = 'en_US'
        );
        insert finraUser;
        return finraUser;
    }

    public static Opportunity createTestOpportunity() {
        Opportunity testOpportunity = new Opportunity(
            Name = 'Test Opportunity',
            StageName = 'Prospecting', // Set initial stage as required by your validation rule
            CloseDate = Date.today() + 30 // Adjust close date as needed
        );
        insert testOpportunity;
        return testOpportunity;
    }
}

