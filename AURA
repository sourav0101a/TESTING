public class PicklistHelper {
    @InvocableMethod
    public static void removeDuplicates(List<Id> accountIds) {
        List<Account> accounts = [SELECT Id, NOM_Customer_Group__c FROM Account WHERE Id IN :accountIds];
        for (Account acc : accounts) {
            if (acc.Account_Service__c != null) {
                // Split the multi-select picklist values into a list
                List<String> valuesList = new List<String>(acc.Account_Service__c.split(';'));

                // Remove duplicates by converting the list to a Set and then back to a List
                Set<String> uniqueValues = new Set<String>(valuesList);
                List<String> cleanedList = new List<String>(uniqueValues);

                // Manually join the cleaned list into a single string with semicolon delimiter
                String joinedString = '';
                for (Integer i = 0; i < cleanedList.size(); i++) {
                    joinedString += cleanedList[i];
                    if (i < cleanedList.size() - 1) {
                        joinedString += ';';
                    }
                }

                // Assign the cleaned string back to the Account_Service__c field
                acc.Account_Service__c = joinedString;
            }
        }
        update accounts;
    }
}

// Create a new Account record with duplicate values in the multi-select picklist field
Account testAccount = new Account(
    Name = 'Test Account with Duplicates',
    Account_Service__c = 'Service1;Service2;Service1;Service3;Service2'
);

// Insert the record
insert testAccount;

// Optional: Retrieve and output the record to verify
Account insertedAccount = [SELECT Id, Name, Account_Service__c FROM Account WHERE Id = :testAccount.Id];
System.debug('Inserted Account Service Field: ' + insertedAccount.Account_Service__c);
